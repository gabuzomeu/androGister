buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'
    }
}

apply plugin: 'java'
apply plugin: 'maven'  

sourceCompatibility = 1.6 

def generatedModelResources = "$buildDir/generated-src-models/java"


repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.11'
    compile('de.greenrobot:greendao-generator:1.3.0-ttbox')
    compile('de.greenrobot:greendao:1.3.0')
    compile project(':model-builder')  
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java',  'build/generated-src-models/java']
            println "### java.srcDirs = ${java.srcDirs}"
        }
    }
}

task show << {
    println relativePath(compileJava.destinationDir)
    println relativePath(processResources.destinationDir)
}


task( generateModels, type: JavaExec ) {
    // Config exec
    main = "eu.ttbox.androgister.domain.generator.RegisterDaoGenerator"
    classpath = sourceSets.main.compileClasspath
    // Config Generator
    def schemaVersion = 1
    def schemaPackage = "eu.ttbox.androgister.domain" 
    // Generate
    def modelDest = file("$generatedModelResources")
   // outputs.dir modelDest
    doFirst {
        modelDest.exists() || modelDest.mkdirs() 
        println "--- --------------------------------------------------------- ---"
        println "--- Generate Product Model ! in " +  modelDest
        args 1, "$schemaPackage", "$generatedModelResources" 
        println "--- --------------------------------------------------------- ---"
    } 
  
}
 
compileJava{
    dependsOn generateModels
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources' 
    from sourceSets.main.allSource
}


artifacts {
    archives jar
    archives sourcesJar
}
